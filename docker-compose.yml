version: '3.3'

x-common:
  &airflow-common
  build:
    context: ./docker/airflow
    dockerfile: Dockerfile
  user: "${AIRFLOW_UID:-50000}:0"
  env_file:
    - .env
  volumes:
  #  - ./code/ecommerce:/usr/local/lib/python3.10/site-packages/ecommerce
    - ./dags:/opt/airflow/dags
    - ./data/airflow/logs:/opt/airflow/logs
    - ./data/airflow/config:/opt/airflow/config
    - ./data/airflow/plugins:/opt/airflow/plugins
    - ./data/airflow/data:/data
  networks:
    - services

services:
  airflow-postgres:
    image: postgres:16-alpine
    container_name: postgres_airflow
    hostname: postgres_airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    networks:
      - services
    environment:
      - POSTGRES_USER=${POSTGRES_AIRFLOW_USER:-airflow}
      - POSTGRES_PASSWORD=${POSTGRES_AIRFLOW_PASSWORD:-airflow}
      - POSTGRES_DB=${POSTGRES_AIRFLOW_DB:-airflow}

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow-scheduler
    command: scheduler
    restart: on-failure
    ports:
      - "13006:8793"
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow-webserver
    restart: always
    command: webserver
    ports:
      - "13005:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5
    depends_on:
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    container_name: airflow-init
    entrypoint: /bin/bash
    depends_on:
      airflow-postgres:
        condition: service_healthy
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

  postgres-main:
    image: postgres:16-alpine
    container_name: "postgres-main"
    hostname: "postgres-main"
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres-main-volume:/var/lib/postgresql/data
#      - ./data/postgres_main/logs:/var/log/postgresql
#      - ./database/postgres_tables.sql:/docker-entrypoint-initdb.d/postgres_tables.sql
    command: ['postgres', '-c', 'wal_level=logical']
    healthcheck:
      test: ['CMD', 'psql', '-U', 'postgres', '-c', 'SELECT 1']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - services

volumes:
  postgres-main-volume:

networks:
  services:
    name: service_network